name: Test

on:
  push:

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
      - name: Install dependencies and actiavte virtualenv
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 respo tests docs --count --exit-zero --statistics
      - name: Test
        run: |
          poetry run coverage run -m pytest
          poetry run coverage xml
          poetry run coverage report --show-missing
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
          file: coverage.xml
          fail_ci_if_error: false
